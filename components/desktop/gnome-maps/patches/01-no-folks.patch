--- a/configure.ac	2017-10-30 20:43:05.000000000 +0000
+++ b/configure.ac	2019-09-13 13:52:02.044013062 +0000
@@ -40,7 +40,6 @@
     geoclue-2.0                  >= $GEOCLUE_MIN_VERSION
 ])
 
-FOLKS_MIN_VERSION=0.10.0
 GEE_MIN_VERSION=0.16.0
 GEOCODE_MIN_VERSION=3.15.2
 CHAMPLAIN_MIN_VERSION=0.12.14
@@ -48,7 +47,6 @@
 
 PKG_CHECK_MODULES(GNOME_MAPS_LIB, [
     gee-0.8                      >= $GEE_MIN_VERSION
-    folks                        >= $FOLKS_MIN_VERSION
     geocode-glib-1.0             >= $GEOCODE_MIN_VERSION
     champlain-0.12               >= $CHAMPLAIN_MIN_VERSION
     libxml-2.0
--- a/src/application.js	2017-10-30 20:43:05.000000000 +0000
+++ b/src/application.js	2019-09-13 14:25:41.479924544 +0000
@@ -118,17 +118,6 @@
     },
 
     _showContact: function(id) {
-        contactStore.lookup(id, (function(contact) {
-            this._mainWindow.markBusy();
-            if (!contact) {
-                this._mainWindow.unmarkBusy();
-                return;
-            }
-            contact.geocode((function() {
-                this._mainWindow.unmarkBusy();
-                this._mainWindow.mapView.showContact(contact);
-            }).bind(this));
-        }).bind(this));
     },
 
     _onShowContactActivate: function(action, parameter) {
@@ -138,14 +127,6 @@
 
         let id = parameter.deep_unpack();
 
-        if (contactStore.state === Maps.ContactStoreState.LOADED) {
-            this. _showContact(id);
-        } else {
-            Utils.once(contactStore, 'notify::state', (function() {
-                if (contactStore.state === Maps.ContactStoreState.LOADED)
-                    this._showContact(id);
-            }).bind(this));
-        }
     },
 
     _onQuitActivate: function() {
@@ -160,19 +141,6 @@
     },
 
     _addContacts: function() {
-        contactStore.get_contacts().forEach(function(contact) {
-            contact.geocode(function() {
-                contact.get_places().forEach(function(p) {
-                    if (!p.location)
-                        return;
-
-                    Utils.debug('Adding contact address: ' + p.name);
-                    let place = new ContactPlace.ContactPlace({ place: p,
-                                                                contact: contact });
-                    placeStore.addPlace(place, PlaceStore.PlaceType.CONTACT);
-                });
-            });
-        });
     },
 
     _initPlaceStore: function() {
@@ -187,14 +155,6 @@
                 'subsequent writes will overwrite the file!');
         }
 
-        if (contactStore.state === Maps.ContactStoreState.LOADED) {
-            this._addContacts();
-        } else {
-            Utils.once(contactStore, 'notify::state', (function() {
-                if (contactStore.state === Maps.ContactStoreState.LOADED)
-                    this._addContacts();
-            }).bind(this));
-        }
     },
 
     _initAppMenu: function() {
@@ -242,8 +202,6 @@
         networkMonitor.connect('network-changed',
                                this._checkNetwork.bind(this));
         checkInManager = new CheckIn.CheckInManager();
-        contactStore = new Maps.ContactStore();
-        contactStore.load();
         osmEdit = new OSMEdit.OSMEdit();
     },
 
--- a/lib/Makefile.am	2017-10-30 20:43:05.000000000 +0000
+++ b/lib/Makefile.am	2019-09-13 13:54:00.148283126 +0000
@@ -5,8 +5,6 @@
 	maps-enum-types.h
 
 libgnome_maps_headers_private =					\
-	maps-contact-store.h						\
-	maps-contact.h							\
 	mapsintl.h							\
 	maps.h								\
 	maps-file-tile-source.h					        \
@@ -19,8 +17,6 @@
 	maps-osm-oauth-proxy-call.h
 
 libgnome_maps_sources =						\
-	maps-contact-store.c						\
-	maps-contact.c							\
 	maps-file-tile-source.c					        \
 	maps-osm.c						        \
 	maps-osm-changeset.c					        \
