For Solaris 11.3 (GNOME 2), we exclude the shell indicator extension.
Also by default, we use the pretty icons rather than the flat ones.

diff --git a/data/com.gitlab.bitseater.meteo.gschema.xml b/data/com.gitlab.bitseater.meteo.gschema.xml
index 85e1b4d..2dca3e2 100644
--- a/data/com.gitlab.bitseater.meteo.gschema.xml
+++ b/data/com.gitlab.bitseater.meteo.gschema.xml
@@ -44,7 +44,7 @@
     </key>
 
     <key name="symbolic" type="b">
-        <default>true</default>
+        <default>false</default>
         <summary>Symbolic icons</summary>
         <description>Use symbolic icons. Otherwise, application use realistic icons.</description>
     </key>
diff --git a/meson.build b/meson.build
index e11b1b1..0c48698 100644
--- a/meson.build
+++ b/meson.build
@@ -80,7 +80,6 @@ executable(
         dependency('json-glib-1.0'),
         dependency('geocode-glib-1.0'),
         dependency('webkit2gtk-4.0'),
-        dependency('appindicator3-0.1'),
     ],
 
     vala_args: [
diff --git a/src/MainWindow.vala b/src/MainWindow.vala
index daa8be9..8d44811 100644
--- a/src/MainWindow.vala
+++ b/src/MainWindow.vala
@@ -21,7 +21,6 @@ namespace Meteo {
     public class MainWindow : Gtk.Window {
 
         public MeteoApp app;
-        public AppIndicator.Indicator indicator;
         private Gtk.Grid view;
         public Meteo.Widgets.Ticket ticket;
 
@@ -46,25 +45,6 @@ namespace Meteo {
                 Gtk.Settings.get_default().set("gtk-application-prefer-dark-theme", false);
             }
 
-            //Create indicator and show if true:
-            create_indicator ();
-            if (setting.get_boolean ("indicator")) {
-                show_indicator ();
-                if (setting.get_boolean ("minimized")) {
-                    this.no_show_all = true;
-                }
-            } else {
-                hide_indicator ();
-            }
-            this.delete_event.connect (() => {
-                if (setting.get_boolean ("indicator")) {
-                    this.hide_on_delete ();
-                } else {
-                    (app as GLib.Application).quit ();
-                }
-                return true;
-            });
-
             //create main view
             var overlay = new Gtk.Overlay ();
             view = new Gtk.Grid ();
@@ -100,105 +80,18 @@ namespace Meteo {
         }
 
         public void set_icolabel (string icon, string label) {
-            this.indicator.set_icon_full (icon, icon);
-            this.indicator.label = label;
         }
 
         public void set_indicatormenu (string? humi, string? pres, string? wspe, string? wdir, string? clou, string? sunr, string? suns, string loc) {
-            var menu = new Gtk.Menu ();
-            var city_item = new Gtk.MenuItem.with_label (loc.up ());
-            city_item.sensitive = false;
-            city_item.show ();
-            menu.append (city_item);
-            if (humi != null) {
-                var humi_item = new Gtk.ImageMenuItem.with_label (humi);
-                var humi_img = new Gtk.Image.from_icon_name ("weather-showers-symbolic", Gtk.IconSize.MENU);
-                humi_item.always_show_image = true;
-                humi_item.set_image (humi_img);
-                humi_item.sensitive = false;
-                humi_item.show ();
-                menu.append (humi_item);
-            }
-            if (pres != null) {
-                var pres_item = new Gtk.ImageMenuItem.with_label (pres);
-                var pres_img = new Gtk.Image.from_icon_name ("weather-severe-alert-symbolic", Gtk.IconSize.MENU);
-                pres_item.always_show_image = true;
-                pres_item.set_image (pres_img);
-                pres_item.sensitive = false;
-                pres_item.show ();
-                menu.append (pres_item);
-            }
-            if (wspe != null && wdir != null) {
-                var wind_item = new Gtk.ImageMenuItem.with_label (wspe + " | " + wdir);
-                var wind_img = new Gtk.Image.from_icon_name ("weather-windy-symbolic", Gtk.IconSize.MENU);
-                wind_item.always_show_image = true;
-                wind_item.set_image (wind_img);
-                wind_item.sensitive = false;
-                wind_item.show ();
-                menu.append (wind_item);
-            }
-            if (clou != null) {
-                var clou_item = new Gtk.ImageMenuItem.with_label (clou);
-                var clou_img = new Gtk.Image.from_icon_name ("weather-overcast-symbolic", Gtk.IconSize.MENU);
-                clou_item.always_show_image = true;
-                clou_item.set_image (clou_img);
-                clou_item.sensitive = false;
-                clou_item.show ();
-                menu.append (clou_item);
-            }
-            if (sunr != null) {
-                var sunr_item = new Gtk.ImageMenuItem.with_label (sunr);
-                var sunr_img = new Gtk.Image.from_icon_name ("weather-clear-symbolic", Gtk.IconSize.MENU);
-                sunr_item.always_show_image = true;
-                sunr_item.set_image (sunr_img);
-                sunr_item.sensitive = false;
-                sunr_item.show ();
-                menu.append (sunr_item);
-            }
-            if (suns != null) {
-                var suns_item = new Gtk.ImageMenuItem.with_label (suns);
-                var suns_img = new Gtk.Image.from_icon_name ("weather-clear-night-symbolic", Gtk.IconSize.MENU);
-                suns_item.always_show_image = true;
-                suns_item.set_image (suns_img);
-                suns_item.sensitive = false;
-                suns_item.show ();
-                menu.append (suns_item);
-            }
-
-            var hr_item = new Gtk.SeparatorMenuItem ();
-            hr_item.show ();
-            menu.append (hr_item);
-            var show_item = new Gtk.MenuItem.with_label (_("Show Meteo"));
-            show_item.activate.connect (() => {
-                this.get_focus ();
-                this.no_show_all = false;
-                this.show_all ();
-            });
-            show_item.show ();
-            menu.append (show_item);
-
-            var quit_item = new Gtk.MenuItem.with_label (_("Quit"));
-            quit_item.show ();
-            quit_item.activate.connect (() => {
-                (app as GLib.Application).quit ();
-            });
-            menu.append (quit_item);
-            this.indicator.set_menu (menu);
-            this.indicator.set_secondary_activate_target (quit_item);
         }
 
         public void create_indicator () {
-            indicator = new AppIndicator.Indicator ("meteo", "weather-few-clouds-symbolic",
-                                    AppIndicator.IndicatorCategory.APPLICATION_STATUS);
-            indicator.set_status (AppIndicator.IndicatorStatus.ACTIVE);
         }
 
         public void show_indicator () {
-            indicator.set_status (AppIndicator.IndicatorStatus.ACTIVE);
         }
 
         public void hide_indicator () {
-            indicator.set_status (AppIndicator.IndicatorStatus.PASSIVE);
         }
     }
 }
