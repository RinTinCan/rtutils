--- a/Source/WebCore/page/NavigatorBase.cpp	2019-09-10 13:41:15.543721909 +0000
+++ b/Source/WebCore/page/NavigatorBase.cpp	2019-09-10 13:44:45.255400525 +0000
@@ -98,6 +98,20 @@
     return "MacIntel"_s;
 #elif OS(WINDOWS)
     return "Win32"_s;
+#elif OS(SOLARIS)
+    // If the user agent is being masqueraded, then change the platform
+    // also, as some sites rely on this (e.g., dslreports speed test)
+    static String platform;
+    const String& agent = userAgent();
+    if(agent.find("Linux", 0) != notFound)
+        platform = "Linux"_s;
+    else if(agent.find("Windows", 0) != notFound)
+        platform = "Win32"_s;
+    else if(agent.find("Intel Mac", 0) != notFound)
+        platform = "MacIntel"_s;
+    else
+        platform = "SunOS"_s;
+    return platform;
 #else
     return ""_s;
 #endif
--- a/Source/WebCore/platform/UserAgentQuirks.cpp	2019-09-10 13:46:35.169229789 +0000
+++ b/Source/WebCore/platform/UserAgentQuirks.cpp	2019-09-10 13:48:53.969416868 +0000
@@ -120,10 +120,20 @@
 
 static bool urlRequiresLinuxDesktopPlatform(const URL& url)
 {
-    // docs.google.com and drive.google.com require the macOS platform quirk.
-    return isGoogle(url)
-        && url.host() != "docs.google.com"
-        && url.host() != "drive.google.com";
+#if OS(SOLARIS)
+    // The speed test at dslreports does not recognize the SunOS platform,
+    // so we masquerade as Linux.
+    String domain = url.host().toString();
+    String baseDomain = topPrivatelyControlledDomain(domain);
+
+    return baseDomain == "dslreports.com" || baseDomain == "dslr.com" ||
+#else
+    return
+#endif
+        // docs.google.com requires the macOS platform quirk.
+        isGoogle(url)
+            && url.host() != "docs.google.com"
+            && url.host() != "drive.google.com";
 }
 
 UserAgentQuirks UserAgentQuirks::quirksForURL(const URL& url)
